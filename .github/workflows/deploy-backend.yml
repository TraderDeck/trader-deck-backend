name: Deploy Spring Boot to Backend EC2

on:
  push:
    branches:
      - main  # Deploys automatically when code is pushed to main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Spring Boot JAR
        run: mvn clean package -DskipTests

      # Step 1: Upload JAR file to Bastion Host
      - name: Upload JAR to Bastion
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.BASTION_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/*.jar"
          target: "/home/ec2-user/"

      # Step 2: SSH into Bastion and Copy JAR to Backend EC2, then Restart App
      - name: SSH into Bastion & Deploy to Backend EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.BASTION_IP }}
          username: ec2-user
          key: ${{ secrets.BASTION_SSH_PRIVATE_KEY }}
          script: |
            echo "Verifying JAR file exists on Bastion..."
            ls -lah /home/ec2-user/target/
            echo "Copying JAR to Backend EC2..."
            scp -o StrictHostKeyChecking=no -i ~/traderdeck-key.pem /home/ec2-user/target/backend-0.0.1-SNAPSHOT.jar ec2-user@10.16.78.89:/home/ec2-user/
            echo "SSHing into Backend EC2..."
            ssh -o StrictHostKeyChecking=no -i ~/traderdeck-key.pem ec2-user@10.16.78.89 << 'EOF'
              echo "Stopping Existing Spring Boot Application"
              pkill -f 'java -jar' || true
              echo "Starting New Deployment"
              nohup java -jar /home/ec2-user/backend-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
              echo "Deployment Successful"
            EOF
